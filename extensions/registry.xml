<?xml version="1.0"?>
<!--AUTOGENERATED FILE - DO NOT EDIT - SEE Makefile-->
<registry><extension href="OES_standard_derivatives/"><name>OES_standard_derivatives</name><number>4</number><history><revision date="2010/01/13" number="1">
      <change>Initial revision.</change>
    </revision><revision date="2011/12/07" number="2">
      <change>Added <code>genType</code> argument and return type to function declarations.</change>
    </revision><revision date="2012/01/03" number="3">
      <change>Removed webgl module per changes to Web IDL spec.</change>
    </revision></history></extension><extension href="OES_texture_float/"><name>OES_texture_float</name><number>1</number><history><revision date="2010/11/29" number="1">
      <change>Initial revision.</change>
    </revision><revision date="2010/12/13" number="2">
      <change>Extended to support pixel type FLOAT for texImage2D and texSubImage2D entry points taking ImageData, HTMLImageElement, HTMLCanvasElement and HTMLVideoElement.
      </change>
    </revision><revision date="2011/09/12" number="3">
      <change>Added optional ability to use a FLOAT type texture as an FBO's color attachment.
      </change>
    </revision><revision date="2012/01/03" number="4">
      <change>Removed webgl module per changes to Web IDL spec.</change>
    </revision></history></extension><extension href="OES_texture_half_float/"><name>OES_texture_half_float</name><number>2</number><history><revision date="2010/11/29" number="1">
      <change>Initial revision.</change>
    </revision><revision date="2011/09/12" number="2">
      <change>
        Added similar text about <code>texImage2D</code> and <code>texSubImage2D</code> as in OES_texture_float spec.
      </change>
      <change>
        Added optional ability to use a HALF_FLOAT_OES type texture as an FBO's color attachment.
      </change>
    </revision><revision date="2012/01/03" number="3">
      <change>Removed webgl module per changes to Web IDL spec.</change>
    </revision></history></extension><draft href="OES_vertex_array_object/"><name>OES_vertex_array_object</name><number>5</number><history><revision date="2011/01/27" number="1">
      <change>Initial revision.</change>
    </revision><revision date="2011/11/12" number="2">
      <change>Demotion to draft.</change>
    </revision><revision date="2011/12/06" number="3">
      <change>Added vendor-specific name strings for draft extension per discussion on WebGL mailing list.</change>
    </revision><revision date="2011/12/07" number="4">
      <change>Renamed "Name Strings" section to "Alias Name Strings".</change>
      <change>Sorted Revision History in ascending order.</change>
    </revision><revision date="2012/01/03" number="5">
      <change>Removed webgl module per changes to Web IDL spec.</change>
    </revision></history></draft><draft href="WEBGL_lose_context/"><name>WEBGL_lose_context</name><number>3</number><history><revision date="2011/01/11" number="1">
      <change>Initial revision.</change>
    </revision><revision date="2011/04/14" number="2">
      <change>Added explicit restoreContext() method based on discussion on public_webgl list, to enable testing of scenario where context stays lost for a period of time.</change>
    </revision><revision date="2011/11/08" number="3">
      <change>Renamed from WEBKIT_lose_context to WEBGL_EXT_lose_context</change>
    </revision><revision date="2011/11/11" number="4">
      <change>Changed to make it clear this extension should follow the WebGL spec for the steps involved in handling losing and restoring the context rather than just fire events.</change>
    </revision><revision date="2011/12/06" number="5">
      <change>Added vendor-specific name strings for draft extension per discussion on WebGL mailing list</change>
      <change>Renamed from WEBGL_EXT_lose_context to WEBGL_lose_context</change>
    </revision><revision date="2011/12/07" number="6">
      <change>Renamed "Name Strings" section to "Alias Name Strings".</change>
    </revision><revision date="2012/01/03" number="7">
      <change>Removed webgl module per changes to Web IDL spec.</change>
    </revision></history></draft><extension href="WEBGL_debug_renderer_info/"><name>WEBGL_debug_renderer_info</name><number>6</number><history><revision date="2011/10/03" number="1">
      <change>Initial revision.</change>
    </revision><revision date="2011/10/12" number="2">
      <change>Assigned enums; assigned webgl extension number.</change>
    </revision><revision date="2011/10/18" number="3">
      <change>Clarify the meaning of "privileged".</change>
    </revision><revision date="2011/12/07" number="4">
      <change>Fixed mistake where extension still indicated draft status.</change>
    </revision><revision date="2012/01/03" number="5">
      <change>Removed webgl module per changes to Web IDL spec.</change>
    </revision></history></extension><extension href="WEBGL_debug_shaders/"><name>WEBGL_debug_shaders</name><number>7</number><history><revision date="2011/10/03" number="1">
      <change>Initial revision.</change>
    </revision><revision date="2011/10/14" number="2">
      <change>Assigned WebGL extension number.</change>
    </revision><revision date="2011/10/18" number="3">
      <change>Clarify the meaning of "privileged".</change>
    </revision><revision date="2011/12/07" number="4">
      <change>Fixed mistake where extension still indicated draft status.</change>
      <change>Renamed "New Functions and Methods" section to "New Functions".</change>
    </revision><revision date="2012/01/03" number="5">
      <change>Removed webgl module per changes to Web IDL spec.</change>
    </revision></history></extension>
  WEBGL_compressed_texture_s3tc
  
    WebGL working group (public_webgl 'at' khronos.org)
  
  
    Members of the WebGL working group
  
  8
  
    
  
  
    
      This extension exposes the compressed texture formats defined in the 
      
      EXT_texture_compression_s3tc OpenGL extension to WebGL.
    
    
      
        Compression formats COMPRESSED_RGB_S3TC_DXT1_EXT,
        COMPRESSED_RGBA_S3TC_DXT1_EXT, COMPRESSED_RGBA_S3TC_DXT3_EXT, and
        COMPRESSED_RGBA_S3TC_DXT5_EXT may be passed to
        the compressedTexImage2D and compressedTexSubImage2D entry points.
      
      
        Calling getParameter with the argument COMPRESSED_TEXTURE_FORMATS
        will include the 4 formats from this specification.
      
      
          The following format specific restrictions must be enforced:

          COMPRESSED_RGB_S3TC_DXT1_EXT
          COMPRESSED_RGBA_S3TC_DXT1_EXT
          The length of the ArrayBufferView, pixels, passed to either
          compressedTexImage2D or compressedTexSubImage2D
          must match the following equation:
          
          floor((width + 3) / 4) * floor((height + 3) / 4) * 8
          
          
          If it is not an INVALID_VALUE error is generated.
          
          When level equals zero width and height
          must be a multiple of 4. When level is greater than 0 width
          and height must be 0, 1, 2 or a multiple of 4.
          
          If they are not an INVALID_OPERATION error is generated.
          
          
          For compressedTexSubImage2D xoffset and
          yoffset must be a multiple of 4 and
          width must be a multiple of 4 or equal to the original
          width of the level. height must be a multiple of 4 or
          equal to the original height of the level.
          If they are not an INVALID_OPERATION error is generated.
          
          

          COMPRESSED_RGBA_S3TC_DXT3_EXT
          COMPRESSED_RGBA_S3TC_DXT5_EXT
          The length of the ArrayBufferView, pixels, passed to either
          compressedTexImage2D or compressedTexSubImage2D
          must match the following equation:
          
          floor((width + 3) / 4) * floor((height + 3) / 4) * 16
          
          
          If it is not an INVALID_VALUE error is generated.
          
          When level equals zero width and height
          must be a multiple of 4. When level is greater than 0 width
          and height must be 0, 1, 2 or a multiple of 4.
          
          If they are not an INVALID_OPERATION error is generated.
          
          
          For compressedTexSubImage2D xoffset and
          yoffset must be a multiple of 4 and
          width must be a multiple of 4 or equal to the original
          width of the level. height must be a multiple of 4 or
          equal to the original height of the level.
          If they are not an INVALID_OPERATION error is generated.
          
          
      
    
  
  
interface WEBGL_compressed_texture_s3tc {
    /* Compressed Texture Formats */
    const GLenum COMPRESSED_RGB_S3TC_DXT1_EXT        = 0x83F0;
    const GLenum COMPRESSED_RGBA_S3TC_DXT1_EXT       = 0x83F1;
    const GLenum COMPRESSED_RGBA_S3TC_DXT3_EXT       = 0x83F2;
    const GLenum COMPRESSED_RGBA_S3TC_DXT5_EXT       = 0x83F3;
};
  
  
    
      Initial revision.
    
  

  WEBGL_depth_texture
  
    WebGL working group (public_webgl 'at' khronos.org)
  
  
    Members of the WebGL working group
    Florian BÃ¶sch
  
  9
  
    
  
  
    
      Cube maps may not be used as depth textures.
    
    
      
        The texImage2D and texSubImage2D entry points are extended to accept the format parameter DEPTH_COMPONENT
      
      
        The texImage2D entry point is extended to accept the internalFormat parameter DEPTH_COMPONENT
      
      
        The texImage2D and texSubImage2D entry points are extended to accept the type parameter UNSIGNED_SHORT and UNSIGNED_INT
      
      
        The framebufferTexture2D entry point is extended to accept a target parameter DEPTH_ATTACHMENT
      
      
        The texImage2D and texSubImage2D entry points are extended to accept ArrayBufferView of type Uint16Array and Uint32Array
      
    
  
  
interface WEBGL_depth_texture {
    const GLenum DEPTH_COMPONENT = 0x1902;
    const GLenum UNSIGNED_SHORT  = 0x1403;
    const GLenum UNSIGNED_INT    = 0x1405;
};
  
  
    
        The error INVALID_OPERATION is generated if the format parameter is is DEPTH_COMPONENT and the target is TEXTURE_CUBE_MAP_{POSITIVE,NEGATIVE}_{X,Y,Z}
    
  
  
    
      Initial revision.
    
    
      Added provisions to exclude cube depth textures.
    
    
      Changed referenced WebGL API version from 2.0 to 1.0
    
  

  OES_element_index_uint
  
    WebGL working group (public_webgl 'at' khronos.org)
  
  
    Members of the WebGL working group
    Florian BÃ¶sch
  
  10
  
    
  
  
    
    
      
        The drawElements entry point parameter type accepts the value UNSIGNED_INT
      
    
  
  
interface OES_element_index_uint {
  const GLenum UNSIGNED_INT = 0x1405;
};
  
  
    
      Initial revision.
    
    
      Removed the bufferData requirement as this is not checked by webgl
    
  

  EXT_texture_filter_anisotropic
  
    WebGL working group (public_webgl 'at' khronos.org)
  
  
    Members of the WebGL working group
    Florian BÃ¶sch (pyalot 'at' gmail.com)
  
  11
  
    
  
  
    
    
      
        The getTexParameter, texParameterf and texParameteri entry points'
        parameter pname accepts the value TEXTURE_MAX_ANISOTROPY
      
      
        The getParameter entry point parameter pname accepts the value MAX_TEXTURE_MAX_ANISOTROPY, returning a value of type float.
      
    
  
  
interface EXT_texture_filter_anisotropic {
  const GLenum TEXTURE_MAX_ANISOTROPY     = 0x84FE;
  const GLenum MAX_TEXTURE_MAX_ANISOTROPY = 0x84FF;
};
  
  
    
      Initial revision.
    
  
</registry>
