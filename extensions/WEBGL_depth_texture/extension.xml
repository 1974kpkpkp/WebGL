<?xml version="1.0"?>

<draft href="WEBGL_depth_texture/">
  <name>WEBGL_depth_texture</name>
  <aliases>
    <alias>WEBKIT_WEBGL_depth_texture</alias>
    <alias>MOZ_WEBGL_depth_texture</alias>
  </aliases>
  <contact>
    <a href="https://www.khronos.org/webgl/public-mailing-list/">WebGL working group</a> (public_webgl 'at' khronos.org)
  </contact>
  <contributors>
    <contributor>Members of the WebGL working group</contributor>
    <contributor>Florian B&#246;sch (pyalot 'at' gmail.com)</contributor>
  </contributors>
  <number>9</number>
  <depends>
    <api version="1.0"/>
  </depends>
  <overview>
    <p>This extension exposes the <a href="http://angleproject.googlecode.com/svn/trunk/extensions/ANGLE_depth_texture.txt">ANGLE_depth_texture</a> functionality to WebGL. ANGLE_depth_texture is similar to <a href="http://www.khronos.org/registry/gles/extensions/OES/OES_depth_texture.txt">OES_depth_texture</a>, but imposes certain restrictions for portability reasons. In particular, it does not support loading image data via the TexImage or TexSubImage commands. Depth textures created via this extension can only have their contents specified by rendering to them. Consult the Errors section below for specific restrictions.</p>
    <features>
      <feature>
        The <code>texImage2D</code> and <code>texSubImage2D</code> entry points are extended to accept the <code>format</code> parameter <code>DEPTH_COMPONENT</code>
      </feature>
      <feature>
        The <code>texImage2D</code> entry point is extended to accept the <code>internalFormat</code> parameter <code>DEPTH_COMPONENT</code>
      </feature>
      <feature>
        The <code>texImage2D</code> and <code>texSubImage2D</code> entry points are extended to accept the <code>type</code> parameter <code>UNSIGNED_SHORT</code> and <code>UNSIGNED_INT</code>
      </feature>
      <feature>
        The <code>framebufferTexture2D</code> entry point is extended to accept a <code>target</code> parameter <code>DEPTH_ATTACHMENT</code>
      </feature>
      <feature>
        The <code>texImage2D</code> and <code>texSubImage2D</code> entry points are extended to accept <code>ArrayBufferView</code> of type <code>Uint16Array</code> and <code>Uint32Array</code>
      </feature>
    </features>
  </overview>
  <idl>
interface WEBGL_depth_texture {
};
  </idl>
  <errors>
    <error>
      The error <code>INVALID_OPERATION</code> is generated if the <code>format</code> parameter is is <code>DEPTH_COMPONENT</code> and the <code>target</code> is <code>TEXTURE_CUBE_MAP_{POSITIVE,NEGATIVE}_{X,Y,Z}</code>.
    </error>
    <error>
      The error INVALID_OPERATION is generated by TexImage2D if <code>format</code> and <code>internalformat</code> are DEPTH_COMPONENT and <code>type</code> is not UNSIGNED_SHORT, or UNSIGNED_INT.
    </error>
    <error>
      The error INVALID_OPERATION is generated by TexSubImage2D if <code>format</code> is DEPTH_COMPONENT and <code>type</code> is not UNSIGNED_SHORT, or UNSIGNED_INT.
    </error>
    <error>
      The error INVALID_OPERATION is generated by TexImage2D if <code>format</code> and <code>internalformat</code> are not DEPTH_COMPONENT and <code>type</code> is UNSIGNED_SHORT, or UNSIGNED_INT.
    </error>
    <error>
      The error INVALID_OPERATION is generated by TexSubImage2D if <code>format</code> is not DEPTH_COMPONENT and <code>type</code> is UNSIGNED_SHORT, or UNSIGNED_INT.
    </error>
    <error>
      The error INVALID_OPERATION is generated in the following situations:
      <ul>
      <li> texImage2D is called with <code>format</code> and <code>internalformat</code> of DEPTH_COMPONENT and
        <ul>
        <li> <code>target</code> is not TEXTURE_2D, or </li>
        <li> <code>data</code> is not NULL </li>
        </ul> </li>
      <li> texSubImage2D is called with <code>format</code> of DEPTH_COMPONENT. </li>
      <li> copyTexImage2D is called with an <code>internalformat</code> that has a base internal format of DEPTH_COMPONENT. </li>
      <li> copyTexSubImage2D is called with a target texture that has a base internal format of DEPTH_COMPONENT. </li>
      <li> generateMipmap is called on a texture that has a base internal format of DEPTH_COMPONENT. </li>
      </ul>
    </error>
  </errors>
  <history>
    <revision date="2012/01/23">
      <change>Initial revision.</change>
    </revision>
    <revision date="2012/01/25">
      <change>Added provisions to exclude cube depth textures.</change>
    </revision>
    <revision date="2012/02/06">
      <change>Changed referenced WebGL API version from 2.0 to 1.0</change>
    </revision>
    <revision date="2012/02/24">
      <change>Removed the enumerants from the IDL which are contained in the context and added aliases to the extension name</change>
    </revision>
    <revision date="2012/03/01">
      <change>
        Renamed with OES prefix and removed the addendum due to expected harmonization between OES_depth_texture and ARB_depth_texture
        (depth cube maps).
      </change>
    </revision>
    <revision date="2012/06/04">
      <change>
        Renamed to WEBGL prefix, and changed to reference ANGLE_depth_texture, because of
        limitations preventing the current ANGLE library from loading of image data to depth
        textures. Incorporated errors from ANGLE_depth_texure extension specification.
      </change>
    </revision>
  </history>
</draft>
